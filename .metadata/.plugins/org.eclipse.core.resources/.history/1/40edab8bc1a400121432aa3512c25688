package com.m1enkrafftman.rogue.external;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import com.m1enkrafftman.rogue.entity.EntityWall;
import com.m1enkrafftman.rogue.misc.Location;
import com.m1enkrafftman.rogue.misc.Point;

public class World {
	
	private int width, height;
	
	private Map world = new HashMap<Location, EntityWall>();
	
	public World(int width, int height) {
		this.width = width;
		this.height = height;
		this.initWorld();
	}
	
	private void initWorld() {
		Random rand = new Random();
		for(int x = 0; x < this.width; x++) {
			for(int y = 0; y < this.height; y++) {
				Location toStore = new Location(x*16, y*16);
				int i = rand.nextInt(100);
				if(i == 0) {
					world.put(toStore, new Collideable(x*16, y*16, 16, 0xffffffff));
				}else {
					world.put(toStore, new Collideable(x*16, y*16, 16, 0xffffffff));
				}
			}
		}
	}
	
	public void renderWorld() {
		for(int x = 0; x < this.width; x++) {
			for(int y = 0; y < this.height; y++) {
				Location toMap = new Location(x*16, y*16);
				EntityWall wall = (EntityWall) this.world.get(toMap);
				if(wall instanceof Collideable) {
					((Collideable)wall).renderCollide();
				}else if(wall instanceof BackTile) {
					((BackTile)wall).renderTile();
				}else {
					wall.renderWall();
				}
			}
		}
	}
	
	public void canMove(ArrayList<Point> points) {
		
	}

}
